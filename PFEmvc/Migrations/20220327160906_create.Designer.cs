// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PFEmvc;

namespace PFEmvc.Migrations
{
    [DbContext(typeof(DbContextApp))]
    [Migration("20220327160906_create")]
    partial class create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PFEmvc.Models.Criterias", b =>
                {
                    b.Property<int>("CrtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("environmentEnvId")
                        .HasColumnType("int");

                    b.HasKey("CrtId");

                    b.HasIndex("environmentEnvId");

                    b.ToTable("Criterias");
                });

            modelBuilder.Entity("PFEmvc.Models.Data", b =>
                {
                    b.Property<int>("DataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheckId")
                        .HasColumnType("int");

                    b.Property<string>("Contexxt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fors_Material_Group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LEONI_Part")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LEONI_Part_Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Part_Request")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DataId");

                    b.HasIndex("CheckId");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("PFEmvc.Models.Environment", b =>
                {
                    b.Property<int>("EnvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnvName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnvId");

                    b.ToTable("Environment");
                });

            modelBuilder.Entity("PFEmvc.Models.Worker", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Team")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("PFEmvc.Models.check", b =>
                {
                    b.Property<int>("CheckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("environmentEnvId")
                        .HasColumnType("int");

                    b.HasKey("CheckId");

                    b.HasIndex("environmentEnvId");

                    b.ToTable("Checks");
                });

            modelBuilder.Entity("WebApplicationPFE.Models.Administrator", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("TeamId");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("WebApplicationPFE.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeamDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("environmentEnvId")
                        .HasColumnType("int");

                    b.HasKey("TeamId");

                    b.HasIndex("environmentEnvId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("PFEmvc.Models.Criterias", b =>
                {
                    b.HasOne("PFEmvc.Models.Environment", "environment")
                        .WithMany("Criterias")
                        .HasForeignKey("environmentEnvId");

                    b.Navigation("environment");
                });

            modelBuilder.Entity("PFEmvc.Models.Data", b =>
                {
                    b.HasOne("PFEmvc.Models.check", null)
                        .WithMany("Data")
                        .HasForeignKey("CheckId");
                });

            modelBuilder.Entity("PFEmvc.Models.check", b =>
                {
                    b.HasOne("PFEmvc.Models.Environment", "environment")
                        .WithMany("Checks")
                        .HasForeignKey("environmentEnvId");

                    b.Navigation("environment");
                });

            modelBuilder.Entity("WebApplicationPFE.Models.Administrator", b =>
                {
                    b.HasOne("WebApplicationPFE.Models.Team", null)
                        .WithMany("administrators")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("WebApplicationPFE.Models.Team", b =>
                {
                    b.HasOne("PFEmvc.Models.Environment", "environment")
                        .WithMany("Teams")
                        .HasForeignKey("environmentEnvId");

                    b.Navigation("environment");
                });

            modelBuilder.Entity("PFEmvc.Models.Environment", b =>
                {
                    b.Navigation("Checks");

                    b.Navigation("Criterias");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("PFEmvc.Models.check", b =>
                {
                    b.Navigation("Data");
                });

            modelBuilder.Entity("WebApplicationPFE.Models.Team", b =>
                {
                    b.Navigation("administrators");
                });
#pragma warning restore 612, 618
        }
    }
}
